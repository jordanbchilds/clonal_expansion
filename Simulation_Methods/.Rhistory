legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", "ABM", "Tau Leap"))
par(mfrow=c(1,1))
plot(1, type='n', title="Simulation Times", xlim=c(0,0.08), xlim=c(0,1e3))
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", "ABM", "Tau Leap"))
plot(1, type='n', title="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e3))
par(mfrow=c(1,1))
plot(1, type='n', title="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e3), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
plot(1, type='n', title="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", "ABM", "Tau Leap"))
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', title="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", "ABM, 185d", "Tau Leap, 200d"))
dev.off()
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', main="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", "ABM, 185d", "Tau Leap, 200d"))
dev.off()
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t="~ "185 days"), "Tau Leap, 200d"))
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t=185 days"), expression("Tau Leap,"~delta~"t=200 days")))
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t=185 days"), expression("Tau Leap,"~Delta~"t=200 days")))
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t = 185 days"), expression("Tau Leap,"~Delta~"t = 200 days")))
warnings()
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', main="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t = 185 days"), expression("Tau Leap,"~Delta~"t = 200 days")))
dev.off()
myBlack = rgb(0,0,0,0.8)
myBlue = rgb(0,0,1, 0.5)
myRed = rgb(1,0,0, 0.5)
steps = c(1,2,5,10,25,50,100,150,175,185,190,200,300,500,1000,5000)
abm_sims = list()
tau_sims = list()
for( step in steps ){
file_temp = paste0("./Simulations/CN_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/CN_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
}
CN_qnt_gill = read.table("./Simulations/CN_qnt_gill_jl.txt")
ML_qnt_gill = read.table("./Simulations/ML_qnt_gill_jl.txt")
gill_times = read.table("./Simulations/gill_times.txt")
abm_185d_times = read.table("./Simulations/abm_185d_times.txt")
tau_200d_times = read.table("./Simulations/tau_200d_times.txt")
comp_plotter = function(x1, x2=NULL, ymax, ts, ts2=NULL, title, main){
plot(1, type='n', xlim=range(ts), ylim=c(0,ymax),
xlab="Time (years)", ylab=main, cex.lab=1.2, cex.main=1.4)
qntl_lines(x1, ts, col=myBlack)
if( !is.null(x2) & is.null(ts2) ){
qntl_lines(x2, ts, col=rgb(0,0,1,0.5))
} else {
qntl_lines(x2, ts2, col=rgb(0,0,1,0.5))
}
title(main=title, outer=TRUE, line=-1)
}
qntl_lines = function(x, ts, col){
if(!is.null(x)){
lines(ts, x[,3], type='s', lwd=3, col=col)
lines(ts, x[,2], type='s', lwd=2, col=col)
lines(ts, x[,4], type='s', lwd=2, col=col)
lines(ts, x[,1], type='s', lwd=1, col=col)
lines(ts, x[,5], type='s', lwd=1, col=col)
}
}
hour = 3600
day = 24*hour
year = 365*day
Tmax = 80*365*24*3600
dtout = 7*24*3600
pdf("./Simulations/PDF/model_comp.pdf", width=14.5, height=8)
par(mfrow=c(1,2))
for(step in steps){
comp_plotter(CN_qnt_gill, ymax=800, ts=seq(0,Tmax,by=dtout)/year, title=paste("Time Step:",step,"Day"),
main="Copy Number")
qntl_lines(abm_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
comp_plotter(ML_qnt_gill, ymax=1, ts=seq(0,Tmax,by=dtout)/year, title="", main="Mutation Load")
qntl_lines(abm_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
}
dev.off()
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', main="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t = 185 days"), expression("Tau Leap,"~Delta~"t = 200 days")))
dev.off()
myBlack = rgb(0,0,0,0.8)
myBlue = rgb(0,0,1, 0.5)
myRed = rgb(1,0,0, 0.5)
steps = c(1,2,5,10,25,50,100,150,175,185,190,200,300,500,1000,5000)
abm_sims = list()
tau_sims = list()
for( step in steps ){
file_temp = paste0("./Simulations/CN_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/CN_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
}
CN_qnt_gill = read.table("./Simulations/CN_qnt_gill_jl.txt")
ML_qnt_gill = read.table("./Simulations/ML_qnt_gill_jl.txt")
gill_times = read.table("./Simulations/gill_times.txt")
abm_185d_times = read.table("./Simulations/abm_185d_times.txt")
tau_200d_times = read.table("./Simulations/tau_200d_times.txt")
comp_plotter = function(x1, x2=NULL, ymax, ts, ts2=NULL, title, main){
plot(1, type='n', xlim=range(ts), ylim=c(0,ymax),
xlab="Time (years)", ylab=main, cex.lab=1.2, cex.main=1.4)
qntl_lines(x1, ts, col=myBlack)
if( !is.null(x2) & is.null(ts2) ){
qntl_lines(x2, ts, col=rgb(0,0,1,0.5))
} else {
qntl_lines(x2, ts2, col=rgb(0,0,1,0.5))
}
title(main=title, outer=TRUE, line=-1)
}
qntl_lines = function(x, ts, col){
if(!is.null(x)){
lines(ts, x[,3], type='s', lwd=3, col=col)
lines(ts, x[,2], type='s', lwd=2, col=col)
lines(ts, x[,4], type='s', lwd=2, col=col)
lines(ts, x[,1], type='s', lwd=1, col=col)
lines(ts, x[,5], type='s', lwd=1, col=col)
}
}
hour = 3600
day = 24*hour
year = 365*day
Tmax = 80*365*24*3600
dtout = 7*24*3600
pdf("./Simulations/PDF/model_comp.pdf", width=14.5, height=8)
par(mfrow=c(1,2))
for(step in steps){
comp_plotter(CN_qnt_gill, ymax=800, ts=seq(0,Tmax,by=dtout)/year, title=paste("Time Step:",step,"Day"),
main="Copy Number")
qntl_lines(abm_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
comp_plotter(ML_qnt_gill, ymax=1, ts=seq(0,Tmax,by=dtout)/year, title="", main="Mutation Load")
qntl_lines(abm_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
}
dev.off()
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', main="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t = 185 days"), expression("Tau Leap,"~Delta~"t = 200 days")))
dev.off()
myBlack = rgb(0,0,0,0.8)
myBlue = rgb(0,0,1, 0.5)
myRed = rgb(1,0,0, 0.5)
steps = c(1,2,5,10,25,50,100,150,175,185,190,200,300,500,1000,5000)
abm_sims = list()
tau_sims = list()
for( step in steps ){
file_temp = paste0("./Simulations/CN_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_abm_",step,"d.txt")
if( file.exists(file_temp)){ abm_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/CN_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("CN_",step,"d")]] = read.table(file_temp) }
file_temp = paste0("./Simulations/ML_qnt_tau_",step,"d.txt")
if( file.exists(file_temp)){ tau_sims[[paste0("ML_",step,"d")]] = read.table(file_temp) }
}
CN_qnt_gill = read.table("./Simulations/CN_qnt_gill_jl.txt")
ML_qnt_gill = read.table("./Simulations/ML_qnt_gill_jl.txt")
gill_times = read.table("./Simulations/gill_times.txt")
abm_185d_times = read.table("./Simulations/abm_185d_times.txt")
tau_200d_times = read.table("./Simulations/tau_200d_times.txt")
comp_plotter = function(x1, x2=NULL, ymax, ts, ts2=NULL, title, main){
plot(1, type='n', xlim=range(ts), ylim=c(0,ymax),
xlab="Time (years)", ylab=main, cex.lab=1.2, cex.main=1.4)
qntl_lines(x1, ts, col=myBlack)
if( !is.null(x2) & is.null(ts2) ){
qntl_lines(x2, ts, col=rgb(0,0,1,0.5))
} else {
qntl_lines(x2, ts2, col=rgb(0,0,1,0.5))
}
title(main=title, outer=TRUE, line=-1)
}
qntl_lines = function(x, ts, col){
if(!is.null(x)){
lines(ts, x[,3], type='s', lwd=3, col=col)
lines(ts, x[,2], type='s', lwd=2, col=col)
lines(ts, x[,4], type='s', lwd=2, col=col)
lines(ts, x[,1], type='s', lwd=1, col=col)
lines(ts, x[,5], type='s', lwd=1, col=col)
}
}
hour = 3600
day = 24*hour
year = 365*day
Tmax = 80*365*24*3600
dtout = 7*24*3600
pdf("./Simulations/PDF/model_comp.pdf", width=14.5, height=8)
par(mfrow=c(1,2))
for(step in steps){
comp_plotter(CN_qnt_gill, ymax=800, ts=seq(0,Tmax,by=dtout)/year, title=paste("Time Step:",step,"Day"),
main="Copy Number")
qntl_lines(abm_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("CN_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
comp_plotter(ML_qnt_gill, ymax=1, ts=seq(0,Tmax,by=dtout)/year, title="", main="Mutation Load")
qntl_lines(abm_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myBlue)
qntl_lines(tau_sims[[paste0("ML_",step,"d")]], ts=seq(0,Tmax,by=step*day)/year, col=myRed)
legend("topleft", lty=1, col=c(myBlack, myRed, myBlue), legend=c("Gillespie","Tau","ABM"))
}
dev.off()
pdf("./Simulations/PDF/model_times.pdf", width=14.5, height=8)
par(mfrow=c(1,1))
plot(1, type='n', main="Simulation Times", xlim=c(0,0.08), ylim=c(0,1e2), ylab="",
xlab="Time (seconds)")
lines(density(gill_times[[1]]), col="black", lwd=2)
lines(density(abm_185d_times[[1]]), col="blue", lwd=2)
lines(density(tau_200d_times[[1]]), col="red", lwd=2)
legend("topright", lty=1, col=c("black", "blue", "red"), legend=c("Gillespie", expression("ABM,"~Delta~"t = 185 days"), expression("Tau Leap,"~Delta~"t = 200 days")))
dev.off()
plot(0:5000, dpois(1000))
plot(0:5000, dpois(0:5000, 1000))
plot(0:5000, dpois(0:5000, 1500))
plot(0:5000, dpois(0:5000, 5000))
library("dplyr")
myBlack = rgb(0,0,0, alpha=0.05)
myBlue = rgb(0,0,1, alpha=0.1)
myRed = rgb(1,0,0, alpha=0.1)
# 23 patients in the Rocha dataset, 6 given here
rocha = read.csv("rocha_deletions.csv", sep=",", header=T, stringsAsFactors=F)
moraes = read.csv("moraes.csv")
# density of copy number across the dataset
copy_num = rocha$TCN.Fibre
CN_dens = density(copy_num)
mode = CN_dens$x[which.max(CN_dens$y)]
plot(density(copy_num), main="Rocha et al.", xlab="Copy Number", ylab="" , lwd=2)
abline(v=mode, col="blue", lwd=2)
legend("topright", legend=c("median"), col="blue", lwd=2)
# patient numbers
pts = unique(rocha$Case.No.)
# manually write in patient ages, given in Rocha et al.
age = c(21,53.5,48,40,32.5,28)
rocha$age = rep(NA, nrow(rocha))
# map each patient to their age
for(i in seq_along(pts)){
rocha$age[rocha$Case.No. == pts[i]] = age[i]
}
# fibre type
fib_types = unique(rocha$Fibre.Type)
rocha$Fibre.Type = tolower(rocha$Fibre.Type)
rocha$Fibre.Type[rocha$Fibre.Type=="type iia/type iix" | rocha$Fibre.Type=="type iia/ iix"] = "type iia/iix"
Fib.type_index = rocha$Fibre.Type == "type i"
## add a wee bit o jitter, to be able to see fibres better
jitter = runif(length(rocha$age), -1,1)*1.5
# Jitter comparison plots
par(mfrow=c(1,2))
plot(rocha$age, rocha$TCN.Fibre, pch=16, col=myBlack,
ylab="Copy Number", xlab="Time (years)", main="Rocha et al.")
plot(rocha$age+jitter, rocha$TCN.Fibre, pch=16, col=myBlack,
ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
plot(rocha$age, rocha$TCN.Fibre, pch=16, col=myBlack, log="y",
ylab="log Copy Number", xlab="Time (years)", main="Rocha et al.")
plot(rocha$age+jitter, rocha$TCN.Fibre, pch=16, col=myBlack, log="y",
ylab="log Copy Number", xlab="~Time (years) ", main="Rocha et al.")
par(mfrow=c(1,1))
# copy number plots
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index],
pch=16, col=myRed, ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index], log="y",
pch=16, col=myRed, ylab="log Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
## copy number distribution
par(mfrow=c(1,2))
plot(density(rocha$TCN.Fibre), main="Copy Number Density", ylab="",
xlab="Copy Number")
plot(density(log(rocha$TCN.Fibre)), main="log Copy Number Density", ylab="",
xlab="log Copy Number")
mean_logCN =  mean(log(rocha$TCN.Fibre))
sd_logCN = sqrt(var(log(rocha$TCN.Fibre)))
plot(density(log(rocha$TCN.Fibre)), main="Density log Copy Number", ylab="",
xlab="log Copy Number", lwd=2)
lines(seq(0,20,0.01), dnorm(seq(0,20,0.01), mean_logCN, sd_logSD), col="blue", lwd=2 )
legend("topright", legend=c(""))
setwd("~/Documents/GitHub/clonal_expansion/Simulation_Methods")
setwd("~/Documents/GitHub/clonal_expansion/Simulation_Methods")
# 23 patients in the Rocha dataset, 6 given here
rocha = read.csv("../rocha_deletions.csv", sep=",", header=T, stringsAsFactors=F)
moraes = read.csv("../moraes.csv")
# density of copy number across the dataset
copy_num = rocha$TCN.Fibre
setwd("~/Documents/GitHub/clonal_expansion")
moraes = read.csv("../Moraes_data.csv")
setwd("~/Documents/GitHub/clonal_expansion/Simulation_Methods")
# 23 patients in the Rocha dataset, 6 given here
rocha = read.csv("../rocha_deletions.csv", sep=",", header=T, stringsAsFactors=F)
moraes = read.csv("../Moraes_data.csv")
# density of copy number across the dataset
copy_num = rocha$TCN.Fibre
CN_dens = density(copy_num)
mode = CN_dens$x[which.max(CN_dens$y)]
plot(density(copy_num), main="Rocha et al.", xlab="Copy Number", ylab="" , lwd=2)
abline(v=mode, col="blue", lwd=2)
legend("topright", legend=c("median"), col="blue", lwd=2)
par(mfrow=c(1,1))
plot(density(copy_num), main="Rocha et al.", xlab="Copy Number", ylab="" , lwd=2)
abline(v=mode, col="blue", lwd=2)
legend("topright", legend=c("median"), col="blue", lwd=2)
# patient numbers
pts = unique(rocha$Case.No.)
# manually write in patient ages, given in Rocha et al.
age = c(21,53.5,48,40,32.5,28)
rocha$age = rep(NA, nrow(rocha))
# map each patient to their age
for(i in seq_along(pts)){
rocha$age[rocha$Case.No. == pts[i]] = age[i]
}
# fibre type
fib_types = unique(rocha$Fibre.Type)
rocha$Fibre.Type = tolower(rocha$Fibre.Type)
rocha$Fibre.Type[rocha$Fibre.Type=="type iia/type iix" | rocha$Fibre.Type=="type iia/ iix"] = "type iia/iix"
Fib.type_index = rocha$Fibre.Type == "type i"
## add a wee bit o jitter, to be able to see fibres better
jitter = runif(length(rocha$age), -1,1)*1.5
# Jitter comparison plots
par(mfrow=c(1,2))
plot(rocha$age, rocha$TCN.Fibre, pch=16, col=myBlack,
ylab="Copy Number", xlab="Time (years)", main="Rocha et al.")
plot(rocha$age+jitter, rocha$TCN.Fibre, pch=16, col=myBlack,
ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
plot(rocha$age, rocha$TCN.Fibre, pch=16, col=myBlack, log="y",
ylab="log Copy Number", xlab="Time (years)", main="Rocha et al.")
plot(rocha$age+jitter, rocha$TCN.Fibre, pch=16, col=myBlack, log="y",
ylab="log Copy Number", xlab="~Time (years) ", main="Rocha et al.")
par(mfrow=c(1,1))
# copy number plots
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index],
pch=16, col=myRed, ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index], log="y",
pch=16, col=myRed, ylab="log Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
## copy number distribution
par(mfrow=c(1,2))
plot(density(rocha$TCN.Fibre), main="Copy Number Density", ylab="",
xlab="Copy Number")
plot(density(log(rocha$TCN.Fibre)), main="log Copy Number Density", ylab="",
xlab="log Copy Number")
mean_logCN =  mean(log(rocha$TCN.Fibre))
sd_logCN = sqrt(var(log(rocha$TCN.Fibre)))
plot(density(log(rocha$TCN.Fibre)), main="Density log Copy Number", ylab="",
xlab="log Copy Number", lwd=2)
lines(seq(0,20,0.01), dnorm(seq(0,20,0.01), mean_logCN, sd_logSD), col="blue", lwd=2 )
legend("topright", legend=c(""))
# copy number plots
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index],
pch=16, col=myRed, ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index], log="y",
pch=16, col=myRed, ylab="log Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
# copy number plots
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index],
pch=16, col=myRed, ylab="Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
plot(rocha$age[Fib.type_index]+jitter[Fib.type_index], rocha$TCN.Fibre[Fib.type_index], log="y",
pch=16, col=myRed, ylab="log Copy Number", xlab="~Time (years)", main="Rocha et al.")
points(rocha$age[!Fib.type_index]+jitter[!Fib.type_index], rocha$TCN.Fibre[!Fib.type_index],
pch=16, col=myBlue)
legend("topright", legend=c("Type I", "Type IIa/Type IIx"), pch=16, col=c(myRed, myBlue))
text(age, rep(min(rocha$TCN.Fibre),length(pts)), pts, pos=3)
View(moraes)
View(rocha)
## distribution per patient
pts
## distribution per patient
y.max = max(rocha$TCN.Fibre)
y.max
## distribution per patient
par(mfrow=c(1,1))
y.max = max(rocha$TCN.Fibre)
plot(1, type='n', ymax=c(0,y.max), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pat[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', ymax=c(0,y.max), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
ymax = max(rocha$TCN.Fibre)
plot(1, type='n', ylim=c(0,ymax), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
warnings()
ymax = max(rocha$TCN.Fibre)
plot(1, type='n', ylim=c(0,ymax), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
xmax = max(rocha$TCN.Fibre)
plot(1, type='n', xlim=c(0,ymax), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,100), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,1), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,0.001), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,0.00001), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,0.0001), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
plot(1, type='n', xlim=c(0,ymax), ylim=c(0,0.00005), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
legend("topright", lty=1, lwd=2, legend=pts)
legend("topright", lty=1, lwd=2, legend=pts, col=1:length(pts))
plot(1, type='n', xlim=c(0,4e5), ylim=c(0,0.00005), xlab="Copy Number", ylab="Density",
main="Copy Number Distribution")
for(i in seq_along(pts)){
pat_data = rocha[rocha$Case.No. == pts[i], ]
lines(density(pat_data$TCN.Fibre), col=i, lwd=2)
}
legend("topright", lty=1, lwd=2, legend=pts, col=1:length(pts))
